<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.beans.BeanUtilsTests" tests="87" skipped="0" failures="0" errors="0" timestamp="2023-03-06T04:33:26" hostname="DESKTOP-VGJP1PJ" time="2.422">
  <properties/>
  <testcase name="spr6063()" classname="org.springframework.beans.BeanUtilsTests" time="1.932"/>
  <testcase name="isNotSimpleProperty(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.039"/>
  <testcase name="isNotSimpleProperty(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleProperty(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleProperty(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="isSimpleValueType(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[5]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[6]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[7]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[8]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[9]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[10]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="isSimpleValueType(Class)[11]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[12]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[13]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[14]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[15]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[16]" classname="org.springframework.beans.BeanUtilsTests" time="0.027"/>
  <testcase name="isSimpleValueType(Class)[17]" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="isSimpleValueType(Class)[18]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[19]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="isSimpleValueType(Class)[20]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[21]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[22]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[23]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="isSimpleValueType(Class)[24]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="resolveInvalidSignatureEndParen()" classname="org.springframework.beans.BeanUtilsTests" time="0.025"/>
  <testcase name="isNotSimpleValueType(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleValueType(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isNotSimpleValueType(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isNotSimpleValueType(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleValueType(Class)[5]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="instantiateClassGivenInterface()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="instantiateClassWithOptionalNullableType()" classname="org.springframework.beans.BeanUtilsTests" time="0.039"/>
  <testcase name="isSimpleProperty(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[5]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[6]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[7]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[8]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[9]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[10]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[11]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[12]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[13]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[14]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[15]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[16]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[17]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[18]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[19]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[20]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[21]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[22]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[23]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[24]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="isSimpleProperty(Class)[25]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[26]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[27]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[28]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="copyPropertiesWithDifferentTypes1()" classname="org.springframework.beans.BeanUtilsTests" time="0.056"/>
  <testcase name="copyPropertiesWithDifferentTypes2()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="resolveOverloadedSignature()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="copyProperties()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="findEditorByConvention()" classname="org.springframework.beans.BeanUtilsTests" time="0.004"/>
  <testcase name="resolveSimpleSignature()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="resolveInvalidSignatureStartParen()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="resolveSignatureWithArray()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="beanPropertyIsArray()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="instantiateClassWithOptionalPrimitiveType()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="instantiateClassWithMoreArgsThanParameters()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="copyPropertiesWithIgnore()" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="resolveWithAndWithoutArgList()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="copyPropertiesHonorsGenericTypeMatches()" classname="org.springframework.beans.BeanUtilsTests" time="0.037"/>
  <testcase name="instantiateClassGivenClassWithoutDefaultConstructor()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="copyPropertiesWithInvalidProperty()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="resolveTypedSignature()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="copyPropertiesWithEditable()" classname="org.springframework.beans.BeanUtilsTests" time="0.006"/>
  <testcase name="copyPropertiesDoesNotHonorGenericTypeMismatches()" classname="org.springframework.beans.BeanUtilsTests" time="0.008"/>
  <testcase name="getPropertyDescriptors()" classname="org.springframework.beans.BeanUtilsTests" time="0.017"/>
  <testcase name="instantiatePrivateClassWithPrivateConstructor()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="copyPropertiesWithIgnoredNonExistingProperty()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
