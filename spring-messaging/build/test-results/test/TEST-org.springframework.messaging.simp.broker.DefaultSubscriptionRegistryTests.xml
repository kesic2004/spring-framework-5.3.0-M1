<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" tests="18" skipped="0" failures="0" errors="0" timestamp="2023-03-06T07:32:43" hostname="DESKTOP-VGJP1PJ" time="0.029">
  <properties/>
  <testcase name="findSubscriptionsReturnsMapSafeToIterateIncludingValues()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.003"/>
  <testcase name="cacheLimitExceeded()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <testcase name="registerSubscriptionWithSelectorNotSupported()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <testcase name="registerSubscriptionWithDestinationPatternRegex()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <testcase name="registerSubscriptionOneSession()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <testcase name="unregisterSubscription()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="registerSubscription()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="findSubscriptionsReturnsMapSafeToIterate()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="registerSubscriptionTwiceAndUnregister()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="registerSubscriptionMultipleSessions()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="registerSubscriptionWithSelector()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.007"/>
  <testcase name="registerAndUnregisterMultipleDestinations()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="registerSubscriptionsWithSimpleAndPatternDestinations()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="unregisterAllSubscriptions()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <testcase name="registerSubscriptionInvalidInput()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.003"/>
  <testcase name="unregisterAllSubscriptionsNoMatch()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <testcase name="registerSubscriptionWithDestinationPattern()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.001"/>
  <testcase name="findSubscriptionsNoMatches()" classname="org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests" time="0.0"/>
  <system-out><![CDATA[02:32:43.616 [Test worker] ERROR o.s.m.s.b.DefaultSubscriptionRegistry - No sessionId in  GenericMessage [payload=, headers={simpMessageType=SUBSCRIBE, simpSubscriptionId=subs01, simpDestination=/foo}]
02:32:43.616 [Test worker] ERROR o.s.m.s.b.DefaultSubscriptionRegistry - No subscriptionId in GenericMessage [payload=, headers={simpMessageType=SUBSCRIBE, simpSessionId=sess01, simpDestination=/foo}]
02:32:43.616 [Test worker] ERROR o.s.m.s.b.DefaultSubscriptionRegistry - No destination in GenericMessage [payload=, headers={simpMessageType=SUBSCRIBE, simpSubscriptionId=subs01, simpSessionId=sess01}]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
